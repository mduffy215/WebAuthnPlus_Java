/*
 * (c) Copyright 2023 ~ Trust Nexus, Inc.
 * All technologies described here in are "Patent Pending". 
 * License information:  http://www.trustnexus.io/license.htm
 * 
 * AS LONG AS THIS NOTICE IS MAINTAINED THE LICENSE PERMITS REDISTRIBUTION OR RE-POSTING  
 * OF THIS SOURCE CODE TO A PUBLIC REPOSITORY (WITH OR WITHOUT MODIFICATIONS)! 
 * 
 * Report License Violations:  trustnexus.io@austin.rr.com 
 * 
 * This is a beta version:  0.0.1
 * Suggestions for code improvements:  trustnexus.io@austin.rr.com
 */

package io.trustnexus.util;

import java.io.OutputStreamWriter;
import java.net.HttpURLConnection;
import java.net.URL;

import javax.json.Json;
import javax.json.JsonObject;

public class TestFcm {
	
	public final static String AUTH_KEY_FCM = "AAAAu9F1IZc:APA91bH0zlBUton6sDCXFJwTWuw87NIDgQ1398mp53U_tq250qpFltcZbPl4yaGpM2ubTF2jqSMoIxXGTkQ5m12CXJPz_cnAm_pdkG0kAzXwlgBm80kz0C8w-njMtDWuJfnq7W6Phphu";
	public final static String API_URL_FCM = "https://fcm.googleapis.com/fcm/send";

	public TestFcm() {
	}

	public static void main(String[] args) {
	   
	  try {
			String userDeviceIdKey = "fIMUfbY_A_0:APA91bFoJ44zf8qHE6mDfCs6uLFNRygGp_0DHLTQ41HbO7dAL2mu35oe9iQSwn5oQ535n4oDRNF1pm-wIwwpdvKts9j0CbKl24-FU9P_H6XvNpKRPbQrmm4CaKz7VOkc3fRYTAnBqFxB";

			 URL url = new URL(API_URL_FCM);
			 HttpURLConnection conn = (HttpURLConnection) url.openConnection();

			 conn.setUseCaches(false);
			 conn.setDoInput(true);
			 conn.setDoOutput(true);

			 conn.setRequestMethod("POST");
			 conn.setRequestProperty("Authorization","key=" + AUTH_KEY_FCM);
			 conn.setRequestProperty("Content-Type","application/json");
			 
			 JsonObject info = Json.createObjectBuilder()
			 .add("title", "Trust Nexus Notification") 
			 .add("body", "Create new credential request.")  //"Authentication request." 
			 .add("sound", "mySound").build(); 
			 
			 JsonObject data = Json.createObjectBuilder()
			 .add("transferKeyEncryptedHex", "56387D47E14F0AED85043877455EDDA7F971FEDD61A1AD923FDD8B3744AF8D67C336897ED3464E6D2E29E2C77536D86A29595D14526C574EACA066AB174F0494DEC98D92DE834CEB3BD1DB6BA814855D65B958017570320506F0841A4EE99F752D2D0BAC140E0F3B523DE433DB38DBBA06F044DD0B9B7A66F8F8F968D57AFB3ED08A6E52538AA552BD5BF94321AE2A191CBF18A2BEA731E6B353F1516B47314C9C8D1F7CA286000865428ED110F7CA169048B5F620F3CA7EEEB9FB2C3416D9156BA4A89C794062DA14E826B1EF7CDC1C6C5229DF0AA005A0B404773E7602E8F624F557B2485E38202CFF5A42CDF5553C9CAE0FD1219B5181FCD45827AC7FC52170687D8379B64568EC54B618E3EB68FB909F078D1B0A4C4D1DA4B22E74573412D69722AC98D2A1DBAE82044F2D26C4E56BEA6375BB85F3C434842A40226F201E70803481919D512B861A6C9BED53DB5265AB2D6A39242A5D53BBBB82776EA206CD9CFB8FCB5313CBEA7E5EC06FBD849D741529B32CF3F156C32EC9C0BBF5CF2550855FA3D127458D0292FC6520A6531B2D24191043E9FC9FD8F2D4AE6F6D37A06A5CF6883C0123DCE7F5E20CE773B331E519B9AE4D7764D5EB1A0BEF15F9127FF7691FFDE1E9E3740446648E38EB36468C80D21C000995F340007FA54B6EF5879A8A54DD55DBFD645710F58595F8D475588305863A816A04BCA0D2930A1BC7E4")
			 .add("transferDataEncryptedHex
			 .add("transferDataEncryptedHashedHex", "875E7194DD7BD5163876686C1C202EB89731C34836B87081B204CC4D1173A183")
			 .build(); 

			 JsonObject json =  Json.createObjectBuilder()
			 .add("to",userDeviceIdKey.trim())
       .add("notification", info)
       .add("data", data).build();

			 OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream());
			 wr.write(json.toString());
			 wr.flush();
			 conn.getInputStream();
		} catch (Exception e) {
			throw new RuntimeException(e);
		}
	}
}







